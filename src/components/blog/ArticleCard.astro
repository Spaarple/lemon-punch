---
// Ce composant est autonome pour les cartes d'articles
// Il utilise un Custom Element sans Shadow DOM pour garder les styles globaux
---

<script is:inline>
    // Définir le Custom Element immédiatement
    if (typeof window !== 'undefined' && !customElements.get('article-card')) {
        class ArticleCard extends HTMLElement {
            connectedCallback() {
                try {
                    // Récupérer les données des attributs
                    const postAttr = this.getAttribute('data-post') || '{}';
                    const decodedPost = postAttr
                        .replace(/&quot;/g, '"')
                        .replace(/&#39;/g, "'");
                    const data = JSON.parse(decodedPost);
                    const categorySlug = this.getAttribute('data-category-slug') || 'uncategorized';
                    const categoryName = this.getAttribute('data-category-name') || '';

                    const coverImage = data._embedded?.['wp:featuredmedia']?.[0];
                    const defaultImage = '/placeholder-article.jpg';
                    const articleUrl = `/actus/${data.slug}/`;

                    // Construire le HTML de la carte
                    this.innerHTML = `
                        <article class="article-card">
                            <div class="article-image">
                                <img src="${coverImage?.source_url || defaultImage}"
                                     alt="${data.title?.rendered || ''}"
                                     onerror="this.src='${defaultImage}'">
                                <div class="article-overlay">
                                    <a href="${articleUrl}" class="article-link">
                                        <i class="fas fa-arrow-right"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="article-content">
                                <div class="article-meta">
                                    <span class="article-date">${data.formattedDate || 'Date inconnue'}</span>
                                    ${categoryName ? `<span class="article-category">${categoryName}</span>` : ''}
                                </div>
                                <h3 class="article-title">
                                    <a href="${articleUrl}">${data.title?.rendered || ''}</a>
                                </h3>
                                ${data.excerpt ? `<p class="article-excerpt">${data.excerpt}</p>` : ''}
                                <a href="${articleUrl}" class="article-read-more">
                                    Lire la suite
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </div>
                        </article>
                    `;
                } catch (error) {
                    console.error('Erreur lors du rendu de article-card:', error);
                    this.innerHTML = '<p>Erreur de chargement de l\'article</p>';
                }
            }
        }

        customElements.define('article-card', ArticleCard);
    }
</script>

<style is:global>
    /* Styles pour les cartes d'articles */
    .article-card {
        background: var(--white);
        overflow: hidden;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }

    .article-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
    }

    .article-image {
        position: relative;
        height: 250px;
        overflow: hidden;
    }

    .article-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .article-card:hover .article-image img {
        transform: scale(1.1);
    }

    .article-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .article-card:hover .article-overlay {
        opacity: 1;
    }

    .article-link {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 60px;
        height: 60px;
        background: var(--primary-yellow);
        color: var(--black);
        border-radius: 50%;
        text-decoration: none;
        font-size: 1.2rem;
        transition: all 0.3s ease;
    }

    .article-link:hover {
        background: var(--white);
        transform: scale(1.1);
    }

    .article-content {
        padding: 2rem;
    }

    .article-meta {
        display: flex;
        gap: 1rem;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1rem;
        flex-wrap: wrap;
    }

    .article-date {
        font-size: 0.9rem;
        color: var(--gray);
        font-weight: 500;
    }

    .article-category {
        background: var(--primary-yellow);
        color: var(--black);
        padding: 4px 8px;
        border-radius: 2px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .article-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--black);
        margin-bottom: 1rem;
        line-height: 1.3;
    }

    .article-title a {
        color: var(--black);
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .article-title a:hover {
        color: var(--primary-yellow);
    }

    .article-excerpt {
        font-size: 1rem;
        color: var(--gray);
        line-height: 1.6;
        margin-bottom: 1.5rem;
    }

    .article-read-more {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--black);
        text-decoration: none;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
    }

    .article-read-more:hover {
        color: var(--primary-yellow);
        transform: translateX(5px);
    }

    /* Responsive */
    @media (max-width: 768px) {
        .article-image {
            height: 220px;
        }

        .article-content {
            padding: 1.5rem;
        }

        .article-title {
            font-size: 1.3rem;
        }

        .article-excerpt {
            font-size: 0.95rem;
            margin-bottom: 1rem;
        }
    }

    @media (max-width: 480px) {
        .article-image {
            height: 200px;
        }

        .article-content {
            padding: 1.25rem;
        }

        .article-meta {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }

        .article-category {
            align-self: flex-start;
        }

        .article-title {
            font-size: 1.2rem;
            margin-bottom: 0.8rem;
        }

        .article-excerpt {
            font-size: 0.9rem;
            line-height: 1.5;
            margin-bottom: 1rem;
        }

        .article-read-more {
            font-size: 0.85rem;
        }
    }
</style>